services:

  gateway:
    build:
      context: ./gateway
    ports:
      - 5000:5000
    depends_on:
      service-registry:
        condition: service_started
       
    
  service-registry:
    build:
      context: ./service-registry
    ports:
      - 50051:50051

  chat-1:
    build:
      context: ./chat
    environment:
      - HOSTNAME=chat-1
      - SERVICE_NAME=chat
      - PORT=8008
      - QUART_APP=app:app
      - QUART_BODY_TIMEOUT=5
      - QUART_RESPONSE_TIMEOUT=5
    command: quart run --port 8008 --host 0.0.0.0
    ports:
      - 8008:8008
    depends_on:
      service-registry:
        condition: service_started
    develop:
      watch:
        - action: sync+restart
          path: ./chat
          target: /app

  chat-2:
    build:
      context: ./chat
    environment:
      - HOSTNAME=chat-2
      - SERVICE_NAME=chat
      - PORT=8008
      - QUART_APP=app:app
      - QUART_BODY_TIMEOUT=5
      - QUART_RESPONSE_TIMEOUT=5
    command: quart --debug run --port 8008 --host 0.0.0.0
    depends_on:
      service-registry:
        condition: service_started
    develop:
      watch:
        - action: sync+restart
          path: ./chat
          target: /app


  users-1:
    build:
      context: ./users
    ports:
      - 8009:8009
    secrets:
      - postgres-users-password
    environment:
      - HOSTNAME=users-1
      - SERVICE_NAME=users
      - PORT=8009
      - QUART_APP=app:app
      - QUART_BODY_TIMEOUT=5
      - QUART_RESPONSE_TIMEOUT=5
      - POSTGRES_SERVER=postgres-users
      - POSTGRES_USER=postgres
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-users-password
    # command: quart --debug run --port 8009 --host 0.0.0.0
    depends_on:
      # service-registry:
      #   condition: service_started
      postgres-users:
        condition: service_healthy       
    develop:
      watch:
        - action: sync+restart
          path: ./users
          target: /app


  postgres-users:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - postgres-users-password
    volumes:
      - db-postgres-users:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-users-password
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 3s
      timeout: 5s
      retries: 5
    ports:
      - 5433:5432

      
volumes:
  db-postgres-users:
  
secrets:
  postgres-users-password:
    file: users/postgres-password.txt
